{
  "contractName": "ImpactInvestment",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "validationClause",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "updateManager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "clauseRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "investmentClause",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "redemptionClause",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "getRole",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "setValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "update",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fundingClause",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "addProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "_role",
          "type": "address"
        }
      ],
      "name": "setRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "funded",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeManager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        },
        {
          "name": "_fundingClause",
          "type": "address"
        },
        {
          "name": "_arbiter",
          "type": "address"
        },
        {
          "name": "valNames",
          "type": "string[]"
        },
        {
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "clause",
          "type": "address"
        }
      ],
      "name": "setFundingClause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "fund",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"validationClause\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"updateManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"clauseRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investmentClause\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"redemptionClause\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getRole\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"appeal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingClause\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"clause\",\"type\":\"address\"}],\"name\":\"setFundingClause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"_role\",\"type\":\"address\"}],\"name\":\"setRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"funded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputeManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"},{\"name\":\"_fundingClause\",\"type\":\"address\"},{\"name\":\"_arbiter\",\"type\":\"address\"},{\"name\":\"valNames\",\"type\":\"string[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/dhen/Documents/Alice/popsicle/contracts/ImpactInvestment.sol\":\"ImpactInvestment\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dhen/Documents/Alice/popsicle/contracts/BaseClause.sol\":{\"keccak256\":\"0x1a6d41a3df69e285fec4824ffc31e4dca071cc0c6e42a1ddc977fabd2bcdca69\",\"urls\":[\"bzzr://59a0f8d07b9c36ce5c6abd2dbd617df89a385e1fe3681f8224f47d46d85f596b\"]},\"/Users/dhen/Documents/Alice/popsicle/contracts/ClauseRegistry.sol\":{\"keccak256\":\"0xdbf771ba0a6022032e48493762f833bdb02fcb2a65fd5b410ffec9bcc733df7d\",\"urls\":[\"bzzr://105e93debc018c6104269713fbc661953cca66952844ea936b53d80a3cfa65d0\"]},\"/Users/dhen/Documents/Alice/popsicle/contracts/DisputeManager.sol\":{\"keccak256\":\"0xc214fe0546c8499bd85701b8990054de4fce182e9cb7ec27c436489c67540264\",\"urls\":[\"bzzr://a1fdbfb221df8d5bd1fa50d4a0096ea56c05723daff3bf0a38cec9e6f25abea6\"]},\"/Users/dhen/Documents/Alice/popsicle/contracts/ImpactInvestment.sol\":{\"keccak256\":\"0x7dd8b4f65ac4fc44da6bd595805bc6490fb03276d87d5b5fa1731053c05bef92\",\"urls\":[\"bzzr://a740d6b849fa9148e7e8ee25d5f17aef81408e64fe8f5ebe613c8da96c56f596\"]},\"/Users/dhen/Documents/Alice/popsicle/contracts/LegalContract.sol\":{\"keccak256\":\"0x6dd18ef4139e0fdff7833b198fc28bc91c928c3288e09bc56576df74d12dffc2\",\"urls\":[\"bzzr://d0b2cb0a35063c187d0913ee828992c3c1a31e21ce4b8f3e4c06cbd9a5626304\"]},\"/Users/dhen/Documents/Alice/popsicle/contracts/UpdateManager.sol\":{\"keccak256\":\"0xf7af7ecd131e8b5387ecb3225d6a74585cb84c94434a338ce3f3b537f8f65f6b\",\"urls\":[\"bzzr://5062efd25aff8eed1e7d1a762c96cca6bb2c596538b07ada33f2d6ce27534fd2\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002982380380620029828339810180604052620000379190810190620004a8565b8480600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040516200008790620002ca565b604051809103906000f080158015620000a4573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620000f390620002d8565b604051809103906000f08015801562000110573d6000803e3d6000fd5b50600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001da6040518060400160405280600781526020017f4152424954455200000000000000000000000000000000000000000000000000815250846200023e60201b60201c565b60008090505b8251811015620002325762000224838281518110620001fb57fe5b60200260200101518383815181106200021057fe5b6020026020010151620002a160201b60201c565b8080600101915050620001e0565b50505050505062000773565b8060018360405162000251919062000593565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b80600083604051620002b4919062000593565b9081526020016040518091039020819055505050565b6105b78062001ec983390190565b610502806200248083390190565b600081519050620002f7816200070b565b92915050565b600082601f8301126200030f57600080fd5b8151620003266200032082620005da565b620005ac565b9150818183526020840193506020810190508360005b8381101562000370578151860162000355888262000435565b8452602084019350602083019250506001810190506200033c565b5050505092915050565b600082601f8301126200038c57600080fd5b8151620003a36200039d8262000603565b620005ac565b91508181835260208401935060208101905083856020840282011115620003c957600080fd5b60005b83811015620003fd5781620003e2888262000491565b845260208401935060208301925050600181019050620003cc565b5050505092915050565b600081519050620004188162000725565b92915050565b6000815190506200042f816200073f565b92915050565b600082601f8301126200044757600080fd5b81516200045e62000458826200062c565b620005ac565b915080825260208301602083018583830111156200047b57600080fd5b62000488838284620006d5565b50505092915050565b600081519050620004a28162000759565b92915050565b600080600080600060a08688031215620004c157600080fd5b6000620004d1888289016200041e565b9550506020620004e48882890162000407565b9450506040620004f788828901620002e6565b935050606086015167ffffffffffffffff8111156200051557600080fd5b6200052388828901620002fd565b925050608086015167ffffffffffffffff8111156200054157600080fd5b6200054f888289016200037a565b9150509295509295909350565b6000620005698262000659565b62000575818562000664565b935062000587818560208601620006d5565b80840191505092915050565b6000620005a182846200055c565b915081905092915050565b6000604051905081810181811067ffffffffffffffff82111715620005d057600080fd5b8060405250919050565b600067ffffffffffffffff821115620005f257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156200061b57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156200064457600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b60006200067c82620006ab565b9050919050565b600062000690826200066f565b9050919050565b6000620006a4826200066f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620006f5578082015181840152602081019050620006d8565b8381111562000705576000848401525b50505050565b62000716816200066f565b81146200072257600080fd5b50565b620007308162000683565b81146200073c57600080fd5b50565b6200074a8162000697565b81146200075657600080fd5b50565b6200076481620006cb565b81146200077057600080fd5b50565b61174680620007836000396000f3fe6080604052600436106100fe5760003560e01c806382ab890a11610095578063c208abdc11610064578063c208abdc14610323578063ca1d209d1461034c578063cfde189014610368578063f3a504f214610391578063f544c3a6146103bc576100fe565b806382ab890a14610269578063960384a0146102925780639d39edc9146102cf578063bd29b32f146102fa576100fe565b806363923974116100d157806363923974146101af5780636e9067fb146101da5780637c2da7aa146102175780637e69b7b014610240576100fe565b80630ae1f3b81461010357806323410a3c1461012e5780635853e10f14610159578063632636aa14610184575b600080fd5b34801561010f57600080fd5b506101186103e7565b60405161012591906113a9565b60405180910390f35b34801561013a57600080fd5b5061014361040d565b60405161015091906113fa565b60405180910390f35b34801561016557600080fd5b5061016e610433565b60405161017b91906113c4565b60405180910390f35b34801561019057600080fd5b50610199610459565b6040516101a691906113a9565b60405180910390f35b3480156101bb57600080fd5b506101c461047f565b6040516101d191906113a9565b60405180910390f35b3480156101e657600080fd5b5061020160048036036101fc9190810190610f94565b6104a5565b60405161020e9190611327565b60405180910390f35b34801561022357600080fd5b5061023e60048036036102399190810190611029565b6104ed565b005b34801561024c57600080fd5b50610267600480360361026291908101906110e4565b610514565b005b34801561027557600080fd5b50610290600480360361028b91908101906110e4565b6107f1565b005b34801561029e57600080fd5b506102b960048036036102b49190810190610f94565b6109ca565b6040516102c69190611445565b60405180910390f35b3480156102db57600080fd5b506102e46109f1565b6040516102f191906113a9565b60405180910390f35b34801561030657600080fd5b50610321600480360361031c9190810190610f6b565b610a17565b005b34801561032f57600080fd5b5061034a60048036036103459190810190611029565b610a5b565b005b610366600480360361036191908101906110e4565b610aee565b005b34801561037457600080fd5b5061038f600480360361038a9190810190610fd5565b610b5d565b005b34801561039d57600080fd5b506103a6610bbe565b6040516103b39190611445565b60405180910390f35b3480156103c857600080fd5b506103d1610bc4565b6040516103de91906113df565b60405180910390f35b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001826040516104b791906112fb565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b806000836040516104fe91906112fb565b9081526020016040518091039020819055505050565b6105526040518060400160405280600781526020017f41524249544552000000000000000000000000000000000000000000000000008152506104a5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461058957600080fd5b600060606000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a96cbd856040518263ffffffff1660e01b81526004016105ea9190611445565b60006040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061063f9190810190610f04565b809350819450829550505050806107eb57600060608473ffffffffffffffffffffffffffffffffffffffff168460405161067991906112e4565b600060405180830381855af49150503d80600081146106b4576040519150601f19603f3d011682016040523d82523d6000602084013e6106b9565b606091505b508092508193505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7cb6b03868460016040518463ffffffff1660e01b815260040161072293929190611342565b600060405180830381600087803b15801561073c57600080fd5b505af1158015610750573d6000803e3d6000fd5b5050505081156107e857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c2b7b868876040518263ffffffff1660e01b81526004016107b59190611445565b600060405180830381600087803b1580156107cf57600080fd5b505af11580156107e3573d6000803e3d6000fd5b505050505b50505b50505050565b61082f6040518060400160405280600781526020017f41524249544552000000000000000000000000000000000000000000000000008152506104a5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461086657600080fd5b6060600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7f758a8856040518263ffffffff1660e01b81526004016108c69190611445565b60006040518083038186803b1580156108de57600080fd5b505afa1580156108f2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061091b919081019061107d565b809350819450829550505050806109c45761093683836104ed565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638412b2cf856040518263ffffffff1660e01b81526004016109919190611445565b600060405180830381600087803b1580156109ab57600080fd5b505af11580156109bf573d6000803e3d6000fd5b505050505b50505050565b600080826040516109db91906112fb565b9081526020016040518091039020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c208abdc83836040518363ffffffff1660e01b8152600401610ab8929190611415565b600060405180830381600087803b158015610ad257600080fd5b505af1158015610ae6573d6000803e3d6000fd5b505050505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506060604051610b2390611312565b604051809103902083604051602001610b3d9291906112b8565b6040516020818303038152906040529050610b588282610bea565b505050565b80600183604051610b6e91906112fb565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060608373ffffffffffffffffffffffffffffffffffffffff1683604051610c1391906112e4565b600060405180830381855af49150503d8060008114610c4e576040519150601f19603f3d011682016040523d82523d6000602084013e610c53565b606091505b508092508193505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7cb6b0334868560006040518563ffffffff1660e01b8152600401610cbd93929190611342565b6000604051808303818588803b158015610cd657600080fd5b505af1158015610cea573d6000803e3d6000fd5b505050505081610d8457600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f33c24d85856040518363ffffffff1660e01b8152600401610d51929190611379565b600060405180830381600087803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b505050505b50505050565b600081359050610d99816116b0565b92915050565b600081519050610dae816116b0565b92915050565b600081519050610dc3816116c7565b92915050565b600082601f830112610dda57600080fd5b8151610ded610de88261148d565b611460565b91508082526020830160208301858383011115610e0957600080fd5b610e14838284611658565b50505092915050565b600081359050610e2c816116de565b92915050565b600082601f830112610e4357600080fd5b8135610e56610e51826114b9565b611460565b91508082526020830160208301858383011115610e7257600080fd5b610e7d838284611649565b50505092915050565b600082601f830112610e9757600080fd5b8151610eaa610ea5826114b9565b611460565b91508082526020830160208301858383011115610ec657600080fd5b610ed1838284611658565b50505092915050565b600081359050610ee9816116f5565b92915050565b600081519050610efe816116f5565b92915050565b600080600060608486031215610f1957600080fd5b6000610f2786828701610d9f565b935050602084015167ffffffffffffffff811115610f4457600080fd5b610f5086828701610dc9565b9250506040610f6186828701610db4565b9150509250925092565b600060208284031215610f7d57600080fd5b6000610f8b84828501610e1d565b91505092915050565b600060208284031215610fa657600080fd5b600082013567ffffffffffffffff811115610fc057600080fd5b610fcc84828501610e32565b91505092915050565b60008060408385031215610fe857600080fd5b600083013567ffffffffffffffff81111561100257600080fd5b61100e85828601610e32565b925050602061101f85828601610d8a565b9150509250929050565b6000806040838503121561103c57600080fd5b600083013567ffffffffffffffff81111561105657600080fd5b61106285828601610e32565b925050602061107385828601610eda565b9150509250929050565b60008060006060848603121561109257600080fd5b600084015167ffffffffffffffff8111156110ac57600080fd5b6110b886828701610e86565b93505060206110c986828701610eef565b92505060406110da86828701610db4565b9150509250925092565b6000602082840312156110f657600080fd5b600061110484828501610eda565b91505092915050565b61111681611533565b82525050565b61112581611545565b82525050565b61113c61113782611551565b61168b565b82525050565b600061114d826114e5565b61115781856114fb565b9350611167818560208601611658565b6111708161169f565b840191505092915050565b6000611186826114e5565b611190818561150c565b93506111a0818560208601611658565b80840191505092915050565b6111b5816115b9565b82525050565b6111c4816115dd565b82525050565b6111d381611601565b82525050565b6111e281611625565b82525050565b60006111f3826114f0565b6111fd8185611517565b935061120d818560208601611658565b6112168161169f565b840191505092915050565b600061122c826114f0565b6112368185611528565b9350611246818560208601611658565b80840191505092915050565b600061125f600d83611528565b91507f66756e642875696e7432353629000000000000000000000000000000000000006000830152600d82019050919050565b61129b816115af565b82525050565b6112b26112ad826115af565b611695565b82525050565b60006112c4828561112b565b6004820191506112d482846112a1565b6020820191508190509392505050565b60006112f0828461117b565b915081905092915050565b60006113078284611221565b915081905092915050565b600061131d82611252565b9150819050919050565b600060208201905061133c600083018461110d565b92915050565b6000606082019050611357600083018661110d565b611364602083018561111c565b611371604083018461111c565b949350505050565b600060408201905061138e600083018561110d565b81810360208301526113a08184611142565b90509392505050565b60006020820190506113be60008301846111ac565b92915050565b60006020820190506113d960008301846111bb565b92915050565b60006020820190506113f460008301846111ca565b92915050565b600060208201905061140f60008301846111d9565b92915050565b6000604082019050818103600083015261142f81856111e8565b905061143e6020830184611292565b9392505050565b600060208201905061145a6000830184611292565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561148357600080fd5b8060405250919050565b600067ffffffffffffffff8211156114a457600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156114d057600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061153e8261158f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061158882611533565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115c4826115cb565b9050919050565b60006115d68261158f565b9050919050565b60006115e8826115ef565b9050919050565b60006115fa8261158f565b9050919050565b600061160c82611613565b9050919050565b600061161e8261158f565b9050919050565b600061163082611637565b9050919050565b60006116428261158f565b9050919050565b82818337600083830152505050565b60005b8381101561167657808201518184015260208101905061165b565b83811115611685576000848401525b50505050565b6000819050919050565b6000819050919050565b6000601f19601f8301169050919050565b6116b981611533565b81146116c457600080fd5b50565b6116d081611545565b81146116db57600080fd5b50565b6116e78161157d565b81146116f257600080fd5b50565b6116fe816115af565b811461170957600080fd5b5056fea265627a7a723058202291cfd156375271b52211d91c6f69dd306ce1a416da5376597f513a751364b96c6578706572696d656e74616cf50037608060405234801561001057600080fd5b50610597806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633f33c24d146100515780639c63558a1461012c578063c2b7b8681461014a578063e3a96cbd14610178575b600080fd5b61012a6004803603604081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061025d565b005b610134610349565b6040518082815260200191505060405180910390f35b6101766004803603602081101561016057600080fd5b8101908080359060200190929190505050610355565b005b6101a46004803603602081101561018e57600080fd5b810190808035906020019092919050505061038f565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015610220578082015181840152602081019050610205565b50505050905090810190601f16801561024d5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b600060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600015158152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906103219291906104c6565b5060408201518160020160006101000a81548160ff0219169083151502179055505050505050565b60008080549050905090565b60016000828154811061036457fe5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b6000606060008084815481106103a157fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600085815481106103e057fe5b9060005260206000209060030201600101600086815481106103fe57fe5b906000526020600020906003020160020160009054906101000a900460ff16818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104b25780601f10610487576101008083540402835291602001916104b2565b820191906000526020600020905b81548152906001019060200180831161049557829003601f168201915b505050505091509250925092509193909250565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061050757805160ff1916838001178555610535565b82800160010185558215610535579182015b82811115610534578251825591602001919060010190610519565b5b5090506105429190610546565b5090565b61056891905b8082111561056457600081600090555060010161054c565b5090565b9056fea165627a7a723058209562d8b664c0231e7f1e8d869bc058448b961c401e842fc58955a8befa4b91880029608060405234801561001057600080fd5b506104e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638412b2cf1461005157806398e527d31461007f578063c208abdc1461009d578063c7f758a814610162575b600080fd5b61007d6004803603602081101561006757600080fd5b810190808035906020019092919050505061021b565b005b610087610255565b6040518082815260200191505060405180910390f35b610160600480360360408110156100b357600080fd5b81019080803590602001906401000000008111156100d057600080fd5b8201836020820111156100e257600080fd5b8035906020019184600183028401116401000000008311171561010457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050610261565b005b61018e6004803603602081101561017857600080fd5b81019080803590602001909291905050506102fa565b604051808060200184815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b838110156101de5780820151818401526020810190506101c3565b50505050905090810190601f16801561020b5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60016000828154811061022a57fe5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b60008080549050905090565b60006040518060600160405280848152602001838152602001600015158152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906102c8929190610411565b506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055505050505050565b60606000806000848154811061030c57fe5b90600052602060002090600302016000016000858154811061032a57fe5b9060005260206000209060030201600101546000868154811061034957fe5b906000526020600020906003020160020160009054906101000a900460ff16828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b505050505092509250925092509193909250565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061045257805160ff1916838001178555610480565b82800160010185558215610480579182015b8281111561047f578251825591602001919060010190610464565b5b50905061048d9190610491565b5090565b6104b391905b808211156104af576000816000905550600101610497565b5090565b9056fea165627a7a72305820041e2514623884b8b17c52b7c7b2839c4d0c3daf8796261c4304590f3b62ac4c0029",
  "deployedBytecode": "",
  "sourceMap": "118:923:5:-;;;354:356;8:9:-1;5:2;;;30:1;27;20:12;5:2;354:356:5;;;;;;;;;;;;;;;;;;;;;;;;502:9;424::6;407:14;;:26;;;;;;;;;;;;;;;;;;460:20;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;460:20:6;443:14;;:37;;;;;;;;;;;;;;;;;;506:19;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;506:19:6;490:13;;:35;;;;;;;;;;;;;;;;;;352:180;546:14:5;530:13;;:30;;;;;;;;;;;;;;;;;;570:28;;;;;;;;;;;;;;;;;;589:8;570:7;;;:28;;:::i;:::-;613:6;620:1;613:8;;608:96;625:8;:15;623:1;:17;608:96;;;661:32;670:8;679:1;670:11;;;;;;;;;;;;;;683:6;690:1;683:9;;;;;;;;;;;;;;661:8;;;:32;;:::i;:::-;642:3;;;;;;;608:96;;;;354:356;;;;;118:923;;2167:99:6;2254:5;2238;2244:6;2238:13;;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;2167:99;;:::o;1951:97::-;2038:3;2021:6;2028;2021:14;;;;;;;;;;;;;;;;;;;;:20;;;;1951:97;;:::o;118:923:5:-;;;;;;;;:::o;:::-;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;163:704;;297:3;290:4;282:6;278:17;274:27;264:2;;315:1;312;305:12;264:2;345:6;339:13;367:86;382:70;445:6;382:70;;;367:86;;;358:95;;470:5;495:6;488:5;481:21;525:4;517:6;513:17;503:27;;547:4;542:3;538:14;531:21;;600:6;633:1;618:243;643:6;640:1;637:13;618:243;;;719:3;713:10;705:6;701:23;743:54;793:3;781:10;743:54;;;738:3;731:67;821:4;816:3;812:14;805:21;;849:4;844:3;840:14;833:21;;675:186;665:1;662;658:9;653:14;;618:243;;;622:14;257:610;;;;;;;;893:722;;1021:3;1014:4;1006:6;1002:17;998:27;988:2;;1039:1;1036;1029:12;988:2;1069:6;1063:13;1091:80;1106:64;1163:6;1106:64;;;1091:80;;;1082:89;;1188:5;1213:6;1206:5;1199:21;1243:4;1235:6;1231:17;1221:27;;1265:4;1260:3;1256:14;1249:21;;1318:6;1365:3;1357:4;1349:6;1345:17;1340:3;1336:27;1333:36;1330:2;;;1382:1;1379;1372:12;1330:2;1407:1;1392:217;1417:6;1414:1;1411:13;1392:217;;;1475:3;1497:48;1541:3;1529:10;1497:48;;;1492:3;1485:61;1569:4;1564:3;1560:14;1553:21;;1597:4;1592:3;1588:14;1581:21;;1449:160;1439:1;1436;1432:9;1427:14;;1392:217;;;1396:14;981:634;;;;;;;;1623:168;;1724:6;1718:13;1709:22;;1736:50;1780:5;1736:50;;;1703:88;;;;;1798:178;;1904:6;1898:13;1889:22;;1916:55;1965:5;1916:55;;;1883:93;;;;;1984:436;;2093:3;2086:4;2078:6;2074:17;2070:27;2060:2;;2111:1;2108;2101:12;2060:2;2141:6;2135:13;2163:61;2178:45;2216:6;2178:45;;;2163:61;;;2154:70;;2244:6;2237:5;2230:21;2280:4;2272:6;2268:17;2313:4;2306:5;2302:16;2348:3;2339:6;2334:3;2330:16;2327:25;2324:2;;;2365:1;2362;2355:12;2324:2;2375:39;2407:6;2402:3;2397;2375:39;;;2053:367;;;;;;;;2428:134;;2512:6;2506:13;2497:22;;2524:33;2551:5;2524:33;;;2491:71;;;;;2569:1157;;;;;;2847:3;2835:9;2826:7;2822:23;2818:33;2815:2;;;2864:1;2861;2854:12;2815:2;2899:1;2916:86;2994:7;2985:6;2974:9;2970:22;2916:86;;;2906:96;;2878:130;3039:2;3057:81;3130:7;3121:6;3110:9;3106:22;3057:81;;;3047:91;;3018:126;3175:2;3193:64;3249:7;3240:6;3229:9;3225:22;3193:64;;;3183:74;;3154:109;3315:2;3304:9;3300:18;3294:25;3339:18;3331:6;3328:30;3325:2;;;3371:1;3368;3361:12;3325:2;3391:95;3478:7;3469:6;3458:9;3454:22;3391:95;;;3381:105;;3273:219;3544:3;3533:9;3529:19;3523:26;3569:18;3561:6;3558:30;3555:2;;;3601:1;3598;3591:12;3555:2;3621:89;3702:7;3693:6;3682:9;3678:22;3621:89;;;3611:99;;3502:214;2809:917;;;;;;;;;3733:360;;3863:39;3896:5;3863:39;;;3914:89;3996:6;3991:3;3914:89;;;3907:96;;4008:52;4053:6;4048:3;4041:4;4034:5;4030:16;4008:52;;;4081:6;4076:3;4072:16;4065:23;;3843:250;;;;;;4100:266;;4246:95;4337:3;4328:6;4246:95;;;4239:102;;4358:3;4351:10;;4227:139;;;;;4373:256;;4435:2;4429:9;4419:19;;4473:4;4465:6;4461:17;4572:6;4560:10;4557:22;4536:18;4524:10;4521:34;4518:62;4515:2;;;4593:1;4590;4583:12;4515:2;4613:10;4609:2;4602:22;4413:216;;;;;4636:264;;4801:18;4793:6;4790:30;4787:2;;;4833:1;4830;4823:12;4787:2;4862:4;4854:6;4850:17;4842:25;;4890:4;4884;4880:15;4872:23;;4724:176;;;;4907:258;;5066:18;5058:6;5055:30;5052:2;;;5098:1;5095;5088:12;5052:2;5127:4;5119:6;5115:17;5107:25;;5155:4;5149;5145:15;5137:23;;4989:176;;;;5172:255;;5312:18;5304:6;5301:30;5298:2;;;5344:1;5341;5334:12;5298:2;5388:4;5384:9;5377:4;5369:6;5365:17;5361:33;5353:41;;5417:4;5411;5407:15;5399:23;;5235:192;;;;5434:92;;5515:5;5509:12;5499:22;;5493:33;;;;5534:145;;5670:3;5655:18;;5648:31;;;;;5687:91;;5749:24;5767:5;5749:24;;;5738:35;;5732:46;;;;5785:108;;5864:24;5882:5;5864:24;;;5853:35;;5847:46;;;;5900:113;;5984:24;6002:5;5984:24;;;5973:35;;5967:46;;;;6020:121;;6093:42;6086:5;6082:54;6071:65;;6065:76;;;;6148:72;;6210:5;6199:16;;6193:27;;;;6228:268;6293:1;6300:101;6314:6;6311:1;6308:13;6300:101;;;6390:1;6385:3;6381:11;6375:18;6371:1;6366:3;6362:11;6355:39;6336:2;6333:1;6329:10;6324:15;;6300:101;;;6416:6;6413:1;6410:13;6407:2;;;6481:1;6472:6;6467:3;6463:16;6456:27;6407:2;6277:219;;;;;6504:117;6573:24;6591:5;6573:24;;;6566:5;6563:35;6553:2;;6612:1;6609;6602:12;6553:2;6547:74;;6628:151;6714:41;6749:5;6714:41;;;6707:5;6704:52;6694:2;;6770:1;6767;6760:12;6694:2;6688:91;;6786:161;6877:46;6917:5;6877:46;;;6870:5;6867:57;6857:2;;6938:1;6935;6928:12;6857:2;6851:96;;6954:117;7023:24;7041:5;7023:24;;;7016:5;7013:35;7003:2;;7062:1;7059;7052:12;7003:2;6997:74;;118:923:5;;;;;;;",
  "deployedSourceMap": "118:923:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;273:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;273:34:5;;;:::i;:::-;;;;;;;;;;;;;;;;311::6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:34:6;;;:::i;:::-;;;;;;;;;;;;;;;;227:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;227:36:6;;;:::i;:::-;;;;;;;;;;;;;;;;233:34:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:34:5;;;:::i;:::-;;;;;;;;;;;;;;;;313;;8:9:-1;5:2;;;30:1;27;20:12;5:2;313:34:5;;;:::i;:::-;;;;;;;;;;;;;;;;2272:105:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2272:105:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1951:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1951:97:6;;;;;;;;;;;;;;;;:::i;:::-;;887:558;;8:9:-1;5:2;;;30:1;27;20:12;5:2;887:558:6;;;;;;;;;;;;;;;;:::i;:::-;;1579:366;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1579:366:6;;;;;;;;;;;;;;;;:::i;:::-;;2054:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2054:107:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;196:31:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;196:31:5;;;:::i;:::-;;;;;;;;;;;;;;;;716:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;716:91:5;;;;;;;;;;;;;;;;:::i;:::-;;1451:122:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1451:122:6;;;;;;;;;;;;;;;;:::i;:::-;;813:225:5;;;;;;;;;;;;;;;;:::i;:::-;;2167:99:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2167:99:6;;;;;;;;;;;;;;;;:::i;:::-;;168:21:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;168:21:5;;;:::i;:::-;;;;;;;;;;;;;;;;269:36:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;269:36:6;;;:::i;:::-;;;;;;;;;;;;;;;;273:34:5;;;;;;;;;;;;;:::o;311::6:-;;;;;;;;;;;;;:::o;227:36::-;;;;;;;;;;;;;:::o;233:34:5:-;;;;;;;;;;;;;:::o;313:::-;;;;;;;;;;;;;:::o;2272:105:6:-;2331:7;2357:5;2363:6;2357:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:20;;2272:105;;;:::o;1951:97::-;2038:3;2021:6;2028;2021:14;;;;;;;;;;;;;;;;;;;;:20;;;;1951:97;;:::o;887:558::-;958:18;;;;;;;;;;;;;;;;;;:7;:18::i;:::-;944:32;;:10;:32;;;936:41;;;;;;987:14;1011:17;1038:13;1088:14;;;;;;;;;;;:25;;;1114:6;1088:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1088:33:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1088:33:6;;;;;;39:16:-1;36:1;17:17;2:54;1088:33:6;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1088:33:6;;;;;;;;;1061:60;;;;;;;;;;;;1137:8;1132:307;;1161:12;1187:19;1240:6;:19;;1260:4;1240:25;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1220:45:6;;;;;;;;1279:14;;;;;;;;;;;:30;;;1310:6;1318:7;1327:4;1279:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1279:53:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1279:53:6;;;;1350:7;1346:83;;;1377:14;;;;;;;;;;;:29;;;1407:6;1377:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1377:37:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1377:37:6;;;;1346:83;1132:307;;;887:558;;;;:::o;1579:366::-;1650:18;;;;;;;;;;;;;;;;;;:7;:18::i;:::-;1636:32;;:10;:32;;;1628:41;;;;;;1680:20;1710:13;1733:12;1783:13;;;;;;;;;;;:25;;;1809:6;1783:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1783:33:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1783:33:6;;;;;;39:16:-1;36:1;17:17;2:54;1783:33:6;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1783:33:6;;;;;;;;;1756:60;;;;;;;;;;;;1832:7;1827:112;;1855:23;1864:6;1872:5;1855:8;:23::i;:::-;1892:13;;;;;;;;;;;:28;;;1921:6;1892:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1892:36:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1892:36:6;;;;1827:112;1579:366;;;;:::o;2054:107::-;2114:7;2140:6;2147;2140:14;;;;;;;;;;;;;;;;;;;;;2133:21;;2054:107;;;:::o;196:31:5:-;;;;;;;;;;;;;:::o;716:91::-;794:6;778:13;;:22;;;;;;;;;;;;;;;;;;716:91;:::o;1451:122:6:-;1526:13;;;;;;;;;;;:25;;;1552:6;1560:5;1526:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1526:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1526:40:6;;;;1451:122;;:::o;813:225:5:-;869:14;894:13;;;;;;;;;;;869:39;;918:17;962:26;;;;;;;;;;;;;;991:7;938:61;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;938:61:5;;;918:81;;1010:21;1018:6;1026:4;1010:7;:21::i;:::-;813:225;;;:::o;2167:99:6:-;2254:5;2238;2244:6;2238:13;;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;2167:99;;:::o;168:21:5:-;;;;:::o;269:36:6:-;;;;;;;;;;;;;:::o;538:343::-;609:12;631:19;681:6;:19;;701:4;681:25;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;661:45:6;;;;;;;;716:14;;;;;;;;;;;:30;;;753:9;764:6;772:7;781:5;716:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;716:71:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;716:71:6;;;;;802:7;797:78;;825:14;;;;;;;;;;;:25;;;851:6;859:4;825:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;825:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;825:39:6;;;;797:78;538:343;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:134;;226:6;220:13;211:22;;238:33;265:5;238:33;;;205:71;;;;;283:128;;364:6;358:13;349:22;;376:30;400:5;376:30;;;343:68;;;;;419:442;;531:3;524:4;516:6;512:17;508:27;498:2;;549:1;546;539:12;498:2;579:6;573:13;601:64;616:48;657:6;616:48;;;601:64;;;592:73;;685:6;678:5;671:21;721:4;713:6;709:17;754:4;747:5;743:16;789:3;780:6;775:3;771:16;768:25;765:2;;;806:1;803;796:12;765:2;816:39;848:6;843:3;838;816:39;;;491:370;;;;;;;;869:164;;966:6;953:20;944:29;;978:50;1022:5;978:50;;;938:95;;;;;1041:442;;1143:3;1136:4;1128:6;1124:17;1120:27;1110:2;;1161:1;1158;1151:12;1110:2;1198:6;1185:20;1220:65;1235:49;1277:6;1235:49;;;1220:65;;;1211:74;;1305:6;1298:5;1291:21;1341:4;1333:6;1329:17;1374:4;1367:5;1363:16;1409:3;1400:6;1395:3;1391:16;1388:25;1385:2;;;1426:1;1423;1416:12;1385:2;1436:41;1470:6;1465:3;1460;1436:41;;;1103:380;;;;;;;;1492:444;;1605:3;1598:4;1590:6;1586:17;1582:27;1572:2;;1623:1;1620;1613:12;1572:2;1653:6;1647:13;1675:65;1690:49;1732:6;1690:49;;;1675:65;;;1666:74;;1760:6;1753:5;1746:21;1796:4;1788:6;1784:17;1829:4;1822:5;1818:16;1864:3;1855:6;1850:3;1846:16;1843:25;1840:2;;;1881:1;1878;1871:12;1840:2;1891:39;1923:6;1918:3;1913;1891:39;;;1565:371;;;;;;;;1944:130;;2024:6;2011:20;2002:29;;2036:33;2063:5;2036:33;;;1996:78;;;;;2081:134;;2165:6;2159:13;2150:22;;2177:33;2204:5;2177:33;;;2144:71;;;;;2222:626;;;;2377:2;2365:9;2356:7;2352:23;2348:32;2345:2;;;2393:1;2390;2383:12;2345:2;2428:1;2445:64;2501:7;2492:6;2481:9;2477:22;2445:64;;;2435:74;;2407:108;2567:2;2556:9;2552:18;2546:25;2591:18;2583:6;2580:30;2577:2;;;2623:1;2620;2613:12;2577:2;2643:73;2708:7;2699:6;2688:9;2684:22;2643:73;;;2633:83;;2525:197;2753:2;2771:61;2824:7;2815:6;2804:9;2800:22;2771:61;;;2761:71;;2732:106;2339:509;;;;;;2855:275;;2976:2;2964:9;2955:7;2951:23;2947:32;2944:2;;;2992:1;2989;2982:12;2944:2;3027:1;3044:70;3106:7;3097:6;3086:9;3082:22;3044:70;;;3034:80;;3006:114;2938:192;;;;;3137:347;;3251:2;3239:9;3230:7;3226:23;3222:32;3219:2;;;3267:1;3264;3257:12;3219:2;3330:1;3319:9;3315:17;3302:31;3353:18;3345:6;3342:30;3339:2;;;3385:1;3382;3375:12;3339:2;3405:63;3460:7;3451:6;3440:9;3436:22;3405:63;;;3395:73;;3281:193;3213:271;;;;;3491:472;;;3622:2;3610:9;3601:7;3597:23;3593:32;3590:2;;;3638:1;3635;3628:12;3590:2;3701:1;3690:9;3686:17;3673:31;3724:18;3716:6;3713:30;3710:2;;;3756:1;3753;3746:12;3710:2;3776:63;3831:7;3822:6;3811:9;3807:22;3776:63;;;3766:73;;3652:193;3876:2;3894:53;3939:7;3930:6;3919:9;3915:22;3894:53;;;3884:63;;3855:98;3584:379;;;;;;3970:472;;;4101:2;4089:9;4080:7;4076:23;4072:32;4069:2;;;4117:1;4114;4107:12;4069:2;4180:1;4169:9;4165:17;4152:31;4203:18;4195:6;4192:30;4189:2;;;4235:1;4232;4225:12;4189:2;4255:63;4310:7;4301:6;4290:9;4286:22;4255:63;;;4245:73;;4131:193;4355:2;4373:53;4418:7;4409:6;4398:9;4394:22;4373:53;;;4363:63;;4334:98;4063:379;;;;;;4449:628;;;;4605:2;4593:9;4584:7;4580:23;4576:32;4573:2;;;4621:1;4618;4611:12;4573:2;4677:1;4666:9;4662:17;4656:24;4700:18;4692:6;4689:30;4686:2;;;4732:1;4729;4722:12;4686:2;4752:74;4818:7;4809:6;4798:9;4794:22;4752:74;;;4742:84;;4635:197;4863:2;4881:64;4937:7;4928:6;4917:9;4913:22;4881:64;;;4871:74;;4842:109;4982:2;5000:61;5053:7;5044:6;5033:9;5029:22;5000:61;;;4990:71;;4961:106;4567:510;;;;;;5084:241;;5188:2;5176:9;5167:7;5163:23;5159:32;5156:2;;;5204:1;5201;5194:12;5156:2;5239:1;5256:53;5301:7;5292:6;5281:9;5277:22;5256:53;;;5246:63;;5218:97;5150:175;;;;;5332:113;5415:24;5433:5;5415:24;;;5410:3;5403:37;5397:48;;;5452:104;5529:21;5544:5;5529:21;;;5524:3;5517:34;5511:45;;;5563:148;5662:43;5681:23;5698:5;5681:23;;;5662:43;;;5657:3;5650:56;5644:67;;;5718:343;;5828:38;5860:5;5828:38;;;5878:70;5941:6;5936:3;5878:70;;;5871:77;;5953:52;5998:6;5993:3;5986:4;5979:5;5975:16;5953:52;;;6026:29;6048:6;6026:29;;;6021:3;6017:39;6010:46;;5808:253;;;;;;6068:356;;6196:38;6228:5;6196:38;;;6246:88;6327:6;6322:3;6246:88;;;6239:95;;6339:52;6384:6;6379:3;6372:4;6365:5;6361:16;6339:52;;;6412:6;6407:3;6403:16;6396:23;;6176:248;;;;;;6431:160;6531:54;6579:5;6531:54;;;6526:3;6519:67;6513:78;;;6598:170;6703:59;6756:5;6703:59;;;6698:3;6691:72;6685:83;;;6775:170;6880:59;6933:5;6880:59;;;6875:3;6868:72;6862:83;;;6952:168;7056:58;7108:5;7056:58;;;7051:3;7044:71;7038:82;;;7127:347;;7239:39;7272:5;7239:39;;;7290:71;7354:6;7349:3;7290:71;;;7283:78;;7366:52;7411:6;7406:3;7399:4;7392:5;7388:16;7366:52;;;7439:29;7461:6;7439:29;;;7434:3;7430:39;7423:46;;7219:255;;;;;;7481:360;;7611:39;7644:5;7611:39;;;7662:89;7744:6;7739:3;7662:89;;;7655:96;;7756:52;7801:6;7796:3;7789:4;7782:5;7778:16;7756:52;;;7829:6;7824:3;7820:16;7813:23;;7591:250;;;;;;7849:400;;8027:85;8109:2;8104:3;8027:85;;;8020:92;;8145:66;8141:1;8136:3;8132:11;8125:87;8240:2;8235:3;8231:12;8224:19;;8013:236;;;;8257:113;8340:24;8358:5;8340:24;;;8335:3;8328:37;8322:48;;;8377:152;8478:45;8498:24;8516:5;8498:24;;;8478:45;;;8473:3;8466:58;8460:69;;;8536:378;;8681:73;8750:3;8741:6;8681:73;;;8776:1;8771:3;8767:11;8760:18;;8789:75;8860:3;8851:6;8789:75;;;8886:2;8881:3;8877:12;8870:19;;8906:3;8899:10;;8669:245;;;;;;8921:262;;9065:93;9154:3;9145:6;9065:93;;;9058:100;;9175:3;9168:10;;9046:137;;;;;9190:266;;9336:95;9427:3;9418:6;9336:95;;;9329:102;;9448:3;9441:10;;9317:139;;;;;9463:372;;9662:148;9806:3;9662:148;;;9655:155;;9827:3;9820:10;;9643:192;;;;9842:213;;9960:2;9949:9;9945:18;9937:26;;9974:71;10042:1;10031:9;10027:17;10018:6;9974:71;;;9931:124;;;;;10062:411;;10224:2;10213:9;10209:18;10201:26;;10238:71;10306:1;10295:9;10291:17;10282:6;10238:71;;;10320:66;10382:2;10371:9;10367:18;10358:6;10320:66;;;10397;10459:2;10448:9;10444:18;10435:6;10397:66;;;10195:278;;;;;;;10480:408;;10644:2;10633:9;10629:18;10621:26;;10658:71;10726:1;10715:9;10711:17;10702:6;10658:71;;;10777:9;10771:4;10767:20;10762:2;10751:9;10747:18;10740:48;10802:76;10873:4;10864:6;10802:76;;;10794:84;;10615:273;;;;;;10895:247;;11030:2;11019:9;11015:18;11007:26;;11044:88;11129:1;11118:9;11114:17;11105:6;11044:88;;;11001:141;;;;;11149:257;;11289:2;11278:9;11274:18;11266:26;;11303:93;11393:1;11382:9;11378:17;11369:6;11303:93;;;11260:146;;;;;11413:257;;11553:2;11542:9;11538:18;11530:26;;11567:93;11657:1;11646:9;11642:17;11633:6;11567:93;;;11524:146;;;;;11677:255;;11816:2;11805:9;11801:18;11793:26;;11830:92;11919:1;11908:9;11904:17;11895:6;11830:92;;;11787:145;;;;;11939:412;;12105:2;12094:9;12090:18;12082:26;;12155:9;12149:4;12145:20;12141:1;12130:9;12126:17;12119:47;12180:78;12253:4;12244:6;12180:78;;;12172:86;;12269:72;12337:2;12326:9;12322:18;12313:6;12269:72;;;12076:275;;;;;;12358:213;;12476:2;12465:9;12461:18;12453:26;;12490:71;12558:1;12547:9;12543:17;12534:6;12490:71;;;12447:124;;;;;12578:256;;12640:2;12634:9;12624:19;;12678:4;12670:6;12666:17;12777:6;12765:10;12762:22;12741:18;12729:10;12726:34;12723:62;12720:2;;;12798:1;12795;12788:12;12720:2;12818:10;12814:2;12807:22;12618:216;;;;;12841:258;;12984:18;12976:6;12973:30;12970:2;;;13016:1;13013;13006:12;12970:2;13060:4;13056:9;13049:4;13041:6;13037:17;13033:33;13025:41;;13089:4;13083;13079:15;13071:23;;12907:192;;;;13106:259;;13250:18;13242:6;13239:30;13236:2;;;13282:1;13279;13272:12;13236:2;13326:4;13322:9;13315:4;13307:6;13303:17;13299:33;13291:41;;13355:4;13349;13345:15;13337:23;;13173:192;;;;13372:91;;13452:5;13446:12;13436:22;;13430:33;;;;13470:92;;13551:5;13545:12;13535:22;;13529:33;;;;13570:162;;13684:6;13679:3;13672:19;13721:4;13716:3;13712:14;13697:29;;13665:67;;;;;13741:144;;13876:3;13861:18;;13854:31;;;;;13894:163;;14009:6;14004:3;13997:19;14046:4;14041:3;14037:14;14022:29;;13990:67;;;;;14066:145;;14202:3;14187:18;;14180:31;;;;;14219:91;;14281:24;14299:5;14281:24;;;14270:35;;14264:46;;;;14317:85;;14390:5;14383:13;14376:21;14365:32;;14359:43;;;;14409:144;;14481:66;14474:5;14470:78;14459:89;;14453:100;;;;14560:108;;14639:24;14657:5;14639:24;;;14628:35;;14622:46;;;;14675:121;;14748:42;14741:5;14737:54;14726:65;;14720:76;;;;14803:72;;14865:5;14854:16;;14848:27;;;;14882:155;;14978:54;15026:5;14978:54;;;14965:67;;14959:78;;;;15044:125;;15140:24;15158:5;15140:24;;;15127:37;;15121:48;;;;15176:165;;15277:59;15330:5;15277:59;;;15264:72;;15258:83;;;;15348:130;;15449:24;15467:5;15449:24;;;15436:37;;15430:48;;;;15485:165;;15586:59;15639:5;15586:59;;;15573:72;;15567:83;;;;15657:130;;15758:24;15776:5;15758:24;;;15745:37;;15739:48;;;;15794:163;;15894:58;15946:5;15894:58;;;15881:71;;15875:82;;;;15964:129;;16064:24;16082:5;16064:24;;;16051:37;;16045:48;;;;16101:145;16182:6;16177:3;16172;16159:30;16238:1;16229:6;16224:3;16220:16;16213:27;16152:94;;;;16255:268;16320:1;16327:101;16341:6;16338:1;16335:13;16327:101;;;16417:1;16412:3;16408:11;16402:18;16398:1;16393:3;16389:11;16382:39;16363:2;16360:1;16356:10;16351:15;;16327:101;;;16443:6;16440:1;16437:13;16434:2;;;16508:1;16499:6;16494:3;16490:16;16483:27;16434:2;16304:219;;;;;16531:73;;16594:5;16583:16;;16577:27;;;;16611:74;;16675:5;16664:16;;16658:27;;;;16692:97;;16780:2;16776:7;16771:2;16764:5;16760:14;16756:28;16746:38;;16740:49;;;;16797:117;16866:24;16884:5;16866:24;;;16859:5;16856:35;16846:2;;16905:1;16902;16895:12;16846:2;16840:74;;16921:111;16987:21;17002:5;16987:21;;;16980:5;16977:32;16967:2;;17023:1;17020;17013:12;16967:2;16961:71;;17039:151;17125:41;17160:5;17125:41;;;17118:5;17115:52;17105:2;;17181:1;17178;17171:12;17105:2;17099:91;;17197:117;17266:24;17284:5;17266:24;;;17259:5;17256:35;17246:2;;17305:1;17302;17295:12;17246:2;17240:74;",
  "source": "\npragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\nimport './BaseClause.sol';\nimport './LegalContract.sol';\n\ncontract ImpactInvestment is LegalContract {\n\n    uint256 public funded;\n\n    BaseClause public fundingClause;\n    BaseClause public investmentClause;\n    BaseClause public validationClause;\n    BaseClause public redemptionClause;\n\n    constructor(ClauseRegistry _registry, BaseClause _fundingClause, address _arbiter, string[] memory valNames, uint256[] memory values) LegalContract(_registry) public {\n        fundingClause = _fundingClause;\n        setRole('ARBITER', _arbiter);\n        for (uint i=0; i<valNames.length; i++) {\n            setValue(valNames[i], values[i]);\n        }\n    }\n\n    function setFundingClause(BaseClause clause) public {\n        fundingClause = clause;\n    }\n\n    function fund(uint256 _amount) public payable {\n        address target = address(fundingClause);\n        bytes memory data = abi.encodePacked(bytes4(keccak256(\"fund(uint256)\")), _amount);\n\n        execute(target, data);\n    }\n\n}\n",
  "sourcePath": "/Users/dhen/Documents/Alice/popsicle/contracts/ImpactInvestment.sol",
  "ast": {
    "absolutePath": "/Users/dhen/Documents/Alice/popsicle/contracts/ImpactInvestment.sol",
    "exportedSymbols": {
      "ImpactInvestment": [
        369
      ]
    },
    "id": 370,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 264,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:23:5"
      },
      {
        "id": 265,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:5"
      },
      {
        "absolutePath": "/Users/dhen/Documents/Alice/popsicle/contracts/BaseClause.sol",
        "file": "./BaseClause.sol",
        "id": 266,
        "nodeType": "ImportDirective",
        "scope": 370,
        "sourceUnit": 20,
        "src": "60:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dhen/Documents/Alice/popsicle/contracts/LegalContract.sol",
        "file": "./LegalContract.sol",
        "id": 267,
        "nodeType": "ImportDirective",
        "scope": 370,
        "sourceUnit": 645,
        "src": "87:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 268,
              "name": "LegalContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 644,
              "src": "147:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LegalContract_$644",
                "typeString": "contract LegalContract"
              }
            },
            "id": 269,
            "nodeType": "InheritanceSpecifier",
            "src": "147:13:5"
          }
        ],
        "contractDependencies": [
          644
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 369,
        "linearizedBaseContracts": [
          369,
          644
        ],
        "name": "ImpactInvestment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 271,
            "name": "funded",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "168:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 270,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "168:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 273,
            "name": "fundingClause",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "196:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseClause_$19",
              "typeString": "contract BaseClause"
            },
            "typeName": {
              "contractScope": null,
              "id": 272,
              "name": "BaseClause",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "196:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseClause_$19",
                "typeString": "contract BaseClause"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 275,
            "name": "investmentClause",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "233:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseClause_$19",
              "typeString": "contract BaseClause"
            },
            "typeName": {
              "contractScope": null,
              "id": 274,
              "name": "BaseClause",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "233:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseClause_$19",
                "typeString": "contract BaseClause"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 277,
            "name": "validationClause",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "273:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseClause_$19",
              "typeString": "contract BaseClause"
            },
            "typeName": {
              "contractScope": null,
              "id": 276,
              "name": "BaseClause",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "273:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseClause_$19",
                "typeString": "contract BaseClause"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 279,
            "name": "redemptionClause",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "313:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseClause_$19",
              "typeString": "contract BaseClause"
            },
            "typeName": {
              "contractScope": null,
              "id": 278,
              "name": "BaseClause",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "313:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseClause_$19",
                "typeString": "contract BaseClause"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "520:190:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 297,
                      "name": "fundingClause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "530:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseClause_$19",
                        "typeString": "contract BaseClause"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 298,
                      "name": "_fundingClause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "546:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseClause_$19",
                        "typeString": "contract BaseClause"
                      }
                    },
                    "src": "530:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseClause_$19",
                      "typeString": "contract BaseClause"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "530:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "41524249544552",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "578:9:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b66fa69d5449cc9c6347ae0fdf5aeced2fda09de11c5ea65ee7ce7215d19b40",
                          "typeString": "literal_string \"ARBITER\""
                        },
                        "value": "ARBITER"
                      },
                      {
                        "argumentTypes": null,
                        "id": 303,
                        "name": "_arbiter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "589:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3b66fa69d5449cc9c6347ae0fdf5aeced2fda09de11c5ea65ee7ce7215d19b40",
                          "typeString": "literal_string \"ARBITER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 301,
                      "name": "setRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "570:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "570:28:5"
                },
                {
                  "body": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "647:57:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 318,
                                "name": "valNames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 288,
                                "src": "670:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 320,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 319,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "679:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "670:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 321,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "683:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 323,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 322,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "690:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "683:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 317,
                            "name": "setValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "661:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "661:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 325,
                        "nodeType": "ExpressionStatement",
                        "src": "661:32:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "623:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "valNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "625:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "625:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "623:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "initializationExpression": {
                    "assignments": [
                      307
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 307,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "613:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "613:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 309,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "620:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "613:8:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "642:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 314,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "642:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 316,
                    "nodeType": "ExpressionStatement",
                    "src": "642:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "608:96:5"
                }
              ]
            },
            "documentation": null,
            "id": 329,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 294,
                    "name": "_registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 281,
                    "src": "502:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClauseRegistry_$146",
                      "typeString": "contract ClauseRegistry"
                    }
                  }
                ],
                "id": 295,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 293,
                  "name": "LegalContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 644,
                  "src": "488:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_LegalContract_$644_$",
                    "typeString": "type(contract LegalContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "488:24:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "366:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClauseRegistry_$146",
                    "typeString": "contract ClauseRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 280,
                    "name": "ClauseRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 146,
                    "src": "366:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClauseRegistry_$146",
                      "typeString": "contract ClauseRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "name": "_fundingClause",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "392:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseClause_$19",
                    "typeString": "contract BaseClause"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 282,
                    "name": "BaseClause",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19,
                    "src": "392:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseClause_$19",
                      "typeString": "contract BaseClause"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 285,
                  "name": "_arbiter",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "419:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "name": "valNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "437:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 286,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "437:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 287,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "437:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 291,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "463:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 289,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "463:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 290,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "463:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "365:122:5"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:5"
            },
            "scope": 369,
            "src": "354:356:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "768:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 334,
                      "name": "fundingClause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "778:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseClause_$19",
                        "typeString": "contract BaseClause"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "clause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "794:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseClause_$19",
                        "typeString": "contract BaseClause"
                      }
                    },
                    "src": "778:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseClause_$19",
                      "typeString": "contract BaseClause"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "778:22:5"
                }
              ]
            },
            "documentation": null,
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFundingClause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "clause",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "742:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseClause_$19",
                    "typeString": "contract BaseClause"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 330,
                    "name": "BaseClause",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19,
                    "src": "742:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseClause_$19",
                      "typeString": "contract BaseClause"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:19:5"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:0:5"
            },
            "scope": 369,
            "src": "716:91:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "859:179:5",
              "statements": [
                {
                  "assignments": [
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 345,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "869:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "869:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 347,
                        "name": "fundingClause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "894:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseClause_$19",
                          "typeString": "contract BaseClause"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BaseClause_$19",
                          "typeString": "contract BaseClause"
                        }
                      ],
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "886:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "869:39:5"
                },
                {
                  "assignments": [
                    351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 351,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "918:17:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 350,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "918:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "66756e642875696e7432353629",
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "972:15:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ca1d209dc81e495c5f70792fcfc8d56f8d8940ef22f28ca5f179e8a34a15b0bf",
                                  "typeString": "literal_string \"fund(uint256)\""
                                },
                                "value": "fund(uint256)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_ca1d209dc81e495c5f70792fcfc8d56f8d8940ef22f28ca5f179e8a34a15b0bf",
                                  "typeString": "literal_string \"fund(uint256)\""
                                }
                              ],
                              "id": 355,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 846,
                              "src": "962:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "962:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "955:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": "bytes4"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "955:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 359,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "991:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "938:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "938:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "938:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "918:81:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "1018:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "1026:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 362,
                      "name": "execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "1010:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:21:5"
                }
              ]
            },
            "documentation": null,
            "id": 368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "827:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "826:17:5"
            },
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:0:5"
            },
            "scope": 369,
            "src": "813:225:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 370,
        "src": "118:923:5"
      }
    ],
    "src": "1:1041:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/dhen/Documents/Alice/popsicle/contracts/ImpactInvestment.sol",
    "exportedSymbols": {
      "ImpactInvestment": [
        369
      ]
    },
    "id": 370,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 264,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:23:5"
      },
      {
        "id": 265,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:5"
      },
      {
        "absolutePath": "/Users/dhen/Documents/Alice/popsicle/contracts/BaseClause.sol",
        "file": "./BaseClause.sol",
        "id": 266,
        "nodeType": "ImportDirective",
        "scope": 370,
        "sourceUnit": 20,
        "src": "60:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dhen/Documents/Alice/popsicle/contracts/LegalContract.sol",
        "file": "./LegalContract.sol",
        "id": 267,
        "nodeType": "ImportDirective",
        "scope": 370,
        "sourceUnit": 645,
        "src": "87:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 268,
              "name": "LegalContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 644,
              "src": "147:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LegalContract_$644",
                "typeString": "contract LegalContract"
              }
            },
            "id": 269,
            "nodeType": "InheritanceSpecifier",
            "src": "147:13:5"
          }
        ],
        "contractDependencies": [
          644
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 369,
        "linearizedBaseContracts": [
          369,
          644
        ],
        "name": "ImpactInvestment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 271,
            "name": "funded",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "168:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 270,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "168:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 273,
            "name": "fundingClause",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "196:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseClause_$19",
              "typeString": "contract BaseClause"
            },
            "typeName": {
              "contractScope": null,
              "id": 272,
              "name": "BaseClause",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "196:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseClause_$19",
                "typeString": "contract BaseClause"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 275,
            "name": "investmentClause",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "233:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseClause_$19",
              "typeString": "contract BaseClause"
            },
            "typeName": {
              "contractScope": null,
              "id": 274,
              "name": "BaseClause",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "233:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseClause_$19",
                "typeString": "contract BaseClause"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 277,
            "name": "validationClause",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "273:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseClause_$19",
              "typeString": "contract BaseClause"
            },
            "typeName": {
              "contractScope": null,
              "id": 276,
              "name": "BaseClause",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "273:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseClause_$19",
                "typeString": "contract BaseClause"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 279,
            "name": "redemptionClause",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "313:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseClause_$19",
              "typeString": "contract BaseClause"
            },
            "typeName": {
              "contractScope": null,
              "id": 278,
              "name": "BaseClause",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "313:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseClause_$19",
                "typeString": "contract BaseClause"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "520:190:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 297,
                      "name": "fundingClause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "530:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseClause_$19",
                        "typeString": "contract BaseClause"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 298,
                      "name": "_fundingClause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "546:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseClause_$19",
                        "typeString": "contract BaseClause"
                      }
                    },
                    "src": "530:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseClause_$19",
                      "typeString": "contract BaseClause"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "530:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "41524249544552",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "578:9:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b66fa69d5449cc9c6347ae0fdf5aeced2fda09de11c5ea65ee7ce7215d19b40",
                          "typeString": "literal_string \"ARBITER\""
                        },
                        "value": "ARBITER"
                      },
                      {
                        "argumentTypes": null,
                        "id": 303,
                        "name": "_arbiter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "589:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3b66fa69d5449cc9c6347ae0fdf5aeced2fda09de11c5ea65ee7ce7215d19b40",
                          "typeString": "literal_string \"ARBITER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 301,
                      "name": "setRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "570:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "570:28:5"
                },
                {
                  "body": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "647:57:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 318,
                                "name": "valNames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 288,
                                "src": "670:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 320,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 319,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "679:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "670:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 321,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "683:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 323,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 322,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "690:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "683:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 317,
                            "name": "setValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "661:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "661:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 325,
                        "nodeType": "ExpressionStatement",
                        "src": "661:32:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "623:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "valNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "625:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "625:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "623:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "initializationExpression": {
                    "assignments": [
                      307
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 307,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "613:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "613:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 309,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "620:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "613:8:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "642:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 314,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "642:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 316,
                    "nodeType": "ExpressionStatement",
                    "src": "642:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "608:96:5"
                }
              ]
            },
            "documentation": null,
            "id": 329,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 294,
                    "name": "_registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 281,
                    "src": "502:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClauseRegistry_$146",
                      "typeString": "contract ClauseRegistry"
                    }
                  }
                ],
                "id": 295,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 293,
                  "name": "LegalContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 644,
                  "src": "488:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_LegalContract_$644_$",
                    "typeString": "type(contract LegalContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "488:24:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "366:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClauseRegistry_$146",
                    "typeString": "contract ClauseRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 280,
                    "name": "ClauseRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 146,
                    "src": "366:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClauseRegistry_$146",
                      "typeString": "contract ClauseRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "name": "_fundingClause",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "392:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseClause_$19",
                    "typeString": "contract BaseClause"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 282,
                    "name": "BaseClause",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19,
                    "src": "392:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseClause_$19",
                      "typeString": "contract BaseClause"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 285,
                  "name": "_arbiter",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "419:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "name": "valNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "437:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 286,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "437:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 287,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "437:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 291,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "463:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 289,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "463:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 290,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "463:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "365:122:5"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:5"
            },
            "scope": 369,
            "src": "354:356:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "768:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 334,
                      "name": "fundingClause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "778:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseClause_$19",
                        "typeString": "contract BaseClause"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "clause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "794:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseClause_$19",
                        "typeString": "contract BaseClause"
                      }
                    },
                    "src": "778:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseClause_$19",
                      "typeString": "contract BaseClause"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "778:22:5"
                }
              ]
            },
            "documentation": null,
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFundingClause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "clause",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "742:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseClause_$19",
                    "typeString": "contract BaseClause"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 330,
                    "name": "BaseClause",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19,
                    "src": "742:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseClause_$19",
                      "typeString": "contract BaseClause"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:19:5"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:0:5"
            },
            "scope": 369,
            "src": "716:91:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "859:179:5",
              "statements": [
                {
                  "assignments": [
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 345,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "869:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "869:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 347,
                        "name": "fundingClause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "894:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseClause_$19",
                          "typeString": "contract BaseClause"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BaseClause_$19",
                          "typeString": "contract BaseClause"
                        }
                      ],
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "886:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "869:39:5"
                },
                {
                  "assignments": [
                    351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 351,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "918:17:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 350,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "918:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "66756e642875696e7432353629",
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "972:15:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ca1d209dc81e495c5f70792fcfc8d56f8d8940ef22f28ca5f179e8a34a15b0bf",
                                  "typeString": "literal_string \"fund(uint256)\""
                                },
                                "value": "fund(uint256)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_ca1d209dc81e495c5f70792fcfc8d56f8d8940ef22f28ca5f179e8a34a15b0bf",
                                  "typeString": "literal_string \"fund(uint256)\""
                                }
                              ],
                              "id": 355,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 846,
                              "src": "962:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "962:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "955:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": "bytes4"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "955:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 359,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "991:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "938:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "938:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "938:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "918:81:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "1018:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "1026:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 362,
                      "name": "execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "1010:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:21:5"
                }
              ]
            },
            "documentation": null,
            "id": 368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "827:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "826:17:5"
            },
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:0:5"
            },
            "scope": 369,
            "src": "813:225:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 370,
        "src": "118:923:5"
      }
    ],
    "src": "1:1041:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-08-24T22:07:20.943Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}